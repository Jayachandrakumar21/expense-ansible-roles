- name: disableling current NodeJS
  ansible.builtin.command: dnf module disable nodejs -y

- name: enable nodejs-20
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: Install NodeJS
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
  - nodejs
  - mysql

- name: Creating expense user
  ansible.builtin.user:
    name: expense

- name: creating app directory
  ansible.builtin.file:
    path: /app
    state: directory

- name: Download application code
  ansible.builtin.get_url:
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend.zip 

- name: unzip backend code
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app
    remote_src: yes

- name: Install nodejs dependencies
  community.general.npm:
    # name: npm install
    path: /app
  
- name: copy backend service
  ansible.builtin.templet:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: Install python lib
  ansible.builtin.pip:
    name: "{{ item }}"
    executable: pip3.9
  loop: 
  - PyMySQL
  - cryptography

- name: mysql_schema
  community.mysql.mysql_db:
    state: import
    name: all
    login_user: "{{ mysql_user }}"
    login_password: "{{ mysql_password }}"
    login_host: "{{ mysql_host }}"
    target: /app/schema/backend.sql

- name: deamon reload and restart
  ansible.builtin.systemd_service:
    name: backend
    enabled: true
    state: restarted
    daemon_reload: true